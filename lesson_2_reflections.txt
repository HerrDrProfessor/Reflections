What happens when you initialize a repository? Why do you need to do it?

It makes it possible to later make git commits on that particular directory. You need to do it, if you want to make git commits.



How is the staging area different from the working directory and the repository? What value do you think it offers?

If I understood right, the staging area allows you to commit several files at once. Often files and changes are directly related,
so it can be useful to commit them together.



How can you use the staging area to make sure you have one commit per logical change?

Sometimes a logical step might involve more than just a one file. With staging area
you can commit several files at once.



What are some situations when branches would be helpful in keeping your history organized? How would branches help?

For example if you want to create an experimental or at least different version of your project, while wanting to
keep the original project working.



How do the diagrams help you visualize the branch structure?

Tree-like structure of the branches is easier to grasp from the graphic version than the text-based version.




What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Mergin branches creates one branch with all the commits from both branches. The visual representation seems logical,
because the branches merged and you can still access all the commits.



What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

The automatic merging can save a lot of time. Sometimes it would be very inefficient to go manually through files and searching for conflicts.