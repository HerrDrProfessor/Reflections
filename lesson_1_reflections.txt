How did viewing a diff between two versions of a file help you see the bug that was introduced?

The diff comparison made it much faster to find the bug.
It would have been much more time consuming to do the whole
search by hand. 



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Programming is decicion making and sometimes you make bad decicions. Sometimes your earlier version of the code
was actually better. It is very efficient if you can easily go 'back in time' and find an earlier version of the code.



What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
If you commit in a logical way and give good descriptions, it is much easier to use and search the versions later.
Cons:
If you forget to commit frequently enough, your changes might be too big or some of your work might get lost if the computer crashes.



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Google docs does autosaving and treats each file separately. That is probably enough for most its' users. The system is also very beginner friendly: it doesn't
need any extra input from user. 

In coding a change in one file can lead to a major change in a beahavior of another file. It is a major advantage to be able to synchronize the changes of several files of a project.



How can you use the commands git log and git diff to view the history of files?

With git log you can see all the ids and descriptions of each commit.
With git diff you can compare commits and see how they have changed.



How might using version control make you more confident to make changes that could break something?

With a good version control you can be more experimental, since you know that you can always go back to your older versions.




Now that you have your workspace set up, what do you want to try using Git for?
Maybe some web page project good be a good idea.









